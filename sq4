# Load required libraries
library(tidyverse)

# Load the dataset
data <- read.csv("OnlineNewsPopularity.csv")

# Data Cleaning
# Remove any leading/trailing white space from column names
names(data) <- trimws(names(data))

# Remove rows with missing values in the 'shares' column
data <- data[complete.cases(data$shares), ]

# Remove rows with zero 'n_tokens_content' (number of words in content)
data <- data[data$n_tokens_content != 0, ]

# Select relevant columns for analysis
relevant_cols <- c("n_tokens_content", "num_imgs", "num_videos", "title_sentiment_polarity", "global_subjectivity", "shares")
data <- data[, relevant_cols]

# Exploratory Data Analysis (EDA)

# Visualizing the distribution of the number of images
ggplot(data, aes(x = num_imgs)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(title = "Distribution of Number of Images", x = "Number of Images", y = "Frequency")

# Visualizing the distribution of the number of videos
ggplot(data, aes(x = num_videos)) +
  geom_histogram(binwidth = 1, fill = "blue", color = "black") +
  labs(title = "Distribution of Number of Videos", x = "Number of Videos", y = "Frequency")

# Scatter plot of 'n_tokens_content' vs 'shares'
ggplot(data, aes(x = n_tokens_content, y = shares)) +
  geom_point() +
  labs(title = "Number of Words in Content vs Number of Shares", x = "Number of Words in Content", y = "Number of Shares")

# Scatter plot of 'title_sentiment_polarity' vs 'shares'
ggplot(data, aes(x = title_sentiment_polarity, y = shares)) +
  geom_point() +
  labs(title = "Title Sentiment Polarity vs Number of Shares", x = "Title Sentiment Polarity", y = "Number of Shares")

# Scatter plot of 'global_subjectivity' vs 'shares'
ggplot(data, aes(x = global_subjectivity, y = shares)) +
  geom_point() +
  labs(title = "Global Subjectivity vs Number of Shares", x = "Global Subjectivity", y = "Number of Shares")

# Correlation Matrix
correlation_matrix <- cor(data)
print(correlation_matrix)

# Visualize correlation 
corrplot(correlation_matrix, method = "circle", type = "upper", tl.cex = 0.7)

